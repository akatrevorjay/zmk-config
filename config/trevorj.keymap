#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#if CONFIG_WIRELESS
    #include <dt-bindings/zmk/bt.h>
    #define _BT_SEL_KEYS_ &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR
#else
    #define _BT_SEL_KEYS_ &trans &trans &trans &trans &trans
#endif

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/greek.dtsi"
#include "../zmk-nodefree-config/international_chars/german.dtsi"

#define DEF 0
#define NAV 1
#define FN 2
#define NUM 3
#define SYS 4
// #define UC 5
// #define MOUSE 6

#include "combos.dtsi"  // must be sourced after layer-shortcuts
// #include "mouse.dtsi"
// #include "extra_keys.h"

ZMK_CONDITIONAL_LAYER(NUM NAV, SYS)    // FN + NUM --> SYS

#define XXX &none
#define ___ &trans


/* Settings */

#define QUICK_TAP_MS 175

&mt {
    tapping-term-ms = <220>;
    // tapping-term-ms = <180>;
    flavor = "balanced";                  // when rolling keys, do not ctrl+w
    // quick-tap-ms = <220>;              // repeat on tap-into-hold
    // hold-trigger-key-positions = <0>;  // tap on interrupt
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

// &sk {  // sticky-key config
//     release-after-ms = <600>;  // release after 0.6s
//     quick-release;             // no double capitalization when rolling keys
// };

// &sl {  // sticky-layer config
//     ignore-modifiers;
// };

// &caps_word {  // mods deactivate caps-word, requires PR #1441
//     /delete-property/ ignore-modifiers;
// };
//
// &num_word {  // num-word, requires PR #1441
//     layers = <NUM>;
// };


/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

ZMK_BEHAVIOR(hml, hold_tap,  // left-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap-ms = <150>;        // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;            // requires PR #1423
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap-ms = <150>;        // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;            // requires PR #1423
)


// tap: comma | shift + tap: semicolon | ctrl + shift + tap: <
ZMK_BEHAVIOR(comma_inner_morph, mod_morph,
    bindings = <&kp SEMICOLON>, <&kp LESS_THAN>;
    mods = <(MOD_LCTL|MOD_RCTL)>;
)
ZMK_BEHAVIOR(comma_morph, mod_morph,
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp COMMA>, <&comma_inner_morph>;
)

// tap: dot | shift + tap: colon | ctrl + shift + tap: >
ZMK_BEHAVIOR(dot_inner_morph, mod_morph,
    bindings = <&kp COLON>, <&kp GREATER_THAN>;
    mods = <(MOD_LCTL|MOD_RCTL)>;
)
ZMK_BEHAVIOR(dot_morph, mod_morph,
    bindings = <&kp DOT>, <&dot_inner_morph>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)


/* Keymap */

// Ideas:
// TAB should be GRAVE

ZMK_LAYER(base,
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &kp TAB    &kp Q         &kp D         &kp R         &kp W         &kp B                    &kp J         &kp F         &kp U         &kp P         &kp SEMI        &kp BSLH
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &kp ESC    &hml LGUI A   &hml LALT S   &hml LCTRL H  &hml LSHFT T  &kp G                    &kp Y         &hmr RSHFT N  &hmr LCTRL E  &hmr LALT O   &hmr LGUI I     &kp SQT
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &kp LSHFT  &kp Z         &kp X         &kp M         &kp C         &kp V                    &kp K         &kp L         &comma_morph  &dot_morph    &kp FSLH        &kp RSHFT
//╰──────╯ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼───────────────────────────╯ ╰──────╯
                                         &mo NUM       &lt FN BSPC   &mt LGUI DEL             &kp RET       &kp SPC       &mo NAV
//                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
)

ZMK_LAYER(nav,
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    ___      ___           ___           ___           ___           ___                     ___           ___           &kp PGDN      &kp PGUP      ___             ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      &sk LGUI      &sk LALT      &sk LCTRL     &sk LSHFT     ___                     ___           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT       ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      ___           ___           ___           ___           ___                     ___           ___           ___           ___           ___             ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                         ___           ___           ___                     ___           ___           ___
//                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
)

ZMK_LAYER(fn,
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    ___      &kp F12       &kp F7        &kp F8        &kp F9        ___                     ___           ___           ___           ___           ___             ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      &kp F11       &kp F4        &kp F5        &kp F6        ___                     ___           &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT      ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      &kp F10       &kp F1        &kp F2        &kp F3        ___                     ___           ___           ___           ___           ___             ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                         ___           ___           ___                     &kp C_MUTE    &kp C_PP      ___
//                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
)

ZMK_LAYER(num,
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    ___      ___           &kp N7        &kp N8        &kp N9        ___                     ___           ___           ___           ___           ___             ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      &hml LGUI N0  &hml LALT N4  &hml LCTRL N5 &hml LSHFT N6 ___                     ___           ___           ___           ___           ___             ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      ___           &kp N1        &kp N2        &kp N3        ___                     ___           ___           ___           ___           ___             ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                         ___           ___           ___                     ___           ___           ___
//                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
)

ZMK_LAYER(sys,
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    ___                                 _BT_SEL_KEYS_                                        ___           ___           ___           ___           ___             ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      ___           ___           ___           ___           &bootloader             &bootloader   ___           ___           ___           ___             ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      ___           ___           ___           ___           &reset                  &reset        ___           ___           ___           ___             ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                         ___           ___           ___                     ___           ___           ___
//                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
)

// ZMK_LAYER(uc,
// //╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
//     ___      ___           &el_omega     &el_phi       &el_pi        &el_beta                ___           &el_lambda    &el_upsilon   &el_psi       &de_eszett      ___
// //├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
//     ___      &el_alpha     &el_rho       &el_sigma     &el_tau       &el_gamma               &el_mu        &el_nu        &el_epsilon   &el_iota      &el_omikron     ___
// //├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
//     ___      &el_zeta      &el_xi        &el_chi       &el_delta     &el_theta               &el_kappa     &el_eta       &de_ae        &de_oe        &de_ue          ___
// //├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
//                                          ___           ___           ___                     ___           ___           ___
// //                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
// )

// ZMK_LAYER(mouse,
// //╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
//     ___      ___           ___           ___           ___           ___                     ___           U_WH_D        U_MS_U         U_WH_U       ___             ___
// //├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
//     ___      ___           ___           ___           ___           ___                     ___           U_MS_L        U_MS_D         U_MS_R       ___             ___
// //├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
//     ___      ___           ___           ___           ___           ___                     ___           ___           ___            ___          ___             ___
// //├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
//                                          ___           ___           ___                     U_BTN2        U_BTN1        ___
// //                                     ╰─────────────┴─────────--──┴─----------──╯ ╰──────╯ ╰─────────────┴─────────────┴──-------────╯
// )

/* vim: set ft=cpp tw=174: */

